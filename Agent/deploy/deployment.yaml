apiVersion: apps/v1
kind: Deployment
metadata:
  name: ea
  namespace: chp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ea
  template:
    metadata:
      labels:
        app: ea
      annotations:
        configHash: CONFIG_HASH_VALUE
    spec:
      # # nodeSelection affinity(application=ea) such that this deployment will only select the node with that label
      # affinity:
      #   # this ensures only ONE pod will run on each node
      #   podAntiAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #     - labelSelector:
      #         matchExpressions:
      #         - key: app
      #           operator: In
      #           values:
      #           - ea
      #       topologyKey: "kubernetes.io/hostname"
      #   # this ensures pod only runs on node with label application=ea
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #       - matchExpressions:
      #         - key: application
      #           operator: In
      #           values:
      #           - ea
      containers:
      - name: easerver
        image: 853771734544.dkr.ecr.us-east-1.amazonaws.com/translator-explanatory-agent:DOCKER_VERSION_VALUE
        imagePullPolicy: Always
        ports:
          - containerPort: 80
        env:
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: postgres-config
                key: username
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgres-config
                key: password
          - name: DB_HOST
            value: DB_HOST_VALUE
      # With the following two sections, we can restrict the deployment on and only on the specific node
      # toleration to node taint such that this deployment can be scheduled on the tainted node while others without the toleration can not     
      tolerations:
        - key: "transltr"
          value: "ea"
          operator: "Equal"
          effect: "NoSchedule"
      restartPolicy: Always

